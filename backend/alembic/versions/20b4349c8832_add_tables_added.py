"""add tables added

Revision ID: 20b4349c8832
Revises: 6e0585d911c1
Create Date: 2025-09-06 13:09:12.325633

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '20b4349c8832'
down_revision: Union[str, Sequence[str], None] = '6e0585d911c1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('requirements',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('usecase_id', sa.UUID(), nullable=False),
    sa.Column('requirement_text', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.Column('is_child_generated', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['usecase_id'], ['usecase_metadata.usecase_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scenarios',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('requirement_id', sa.UUID(), nullable=False),
    sa.Column('scenario_text', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['requirement_id'], ['requirements.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('test_cases',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('scenario_id', sa.UUID(), nullable=False),
    sa.Column('test_case_text', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['scenario_id'], ['scenarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('test_scripts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('test_case_id', sa.UUID(), nullable=False),
    sa.Column('script_text', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['test_case_id'], ['test_cases.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('test_case_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('test_scripts')
    op.drop_table('test_cases')
    op.drop_table('scenarios')
    op.drop_table('requirements')
    # ### end Alembic commands ###
